// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"plain-additional-items/example/internal"
)

type HttpApi struct {
	pulumi.ResourceState

	Authorizers pulumi.StringArrayOutput `pulumi:"authorizers"`
}

// NewHttpApi registers a new resource with the given unique name, arguments, and options.
func NewHttpApi(ctx *pulumi.Context,
	name string, args *HttpApiArgs, opts ...pulumi.ResourceOption) (*HttpApi, error) {
	if args == nil {
		args = &HttpApiArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HttpApi
	err := ctx.RegisterRemoteComponentResource("example:index:HttpApi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type httpApiArgs struct {
	Authorizers map[string]HttpAuthorizer `pulumi:"authorizers"`
}

// The set of arguments for constructing a HttpApi resource.
type HttpApiArgs struct {
	Authorizers map[string]HttpAuthorizer
}

func (HttpApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*httpApiArgs)(nil)).Elem()
}

type HttpApiInput interface {
	pulumi.Input

	ToHttpApiOutput() HttpApiOutput
	ToHttpApiOutputWithContext(ctx context.Context) HttpApiOutput
}

func (*HttpApi) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpApi)(nil)).Elem()
}

func (i *HttpApi) ToHttpApiOutput() HttpApiOutput {
	return i.ToHttpApiOutputWithContext(context.Background())
}

func (i *HttpApi) ToHttpApiOutputWithContext(ctx context.Context) HttpApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpApiOutput)
}

type HttpApiOutput struct{ *pulumi.OutputState }

func (HttpApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HttpApi)(nil)).Elem()
}

func (o HttpApiOutput) ToHttpApiOutput() HttpApiOutput {
	return o
}

func (o HttpApiOutput) ToHttpApiOutputWithContext(ctx context.Context) HttpApiOutput {
	return o
}

func (o HttpApiOutput) Authorizers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HttpApi) pulumi.StringArrayOutput { return v.Authorizers }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HttpApiInput)(nil)).Elem(), &HttpApi{})
	pulumi.RegisterOutputType(HttpApiOutput{})
}
